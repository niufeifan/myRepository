<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.springboot.dao.UserInfoMapper">
  <resultMap id="BaseResultMap" type="com.springboot.model.UserInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="password" jdbcType="VARCHAR" property="password" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, password
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectIfAdmin" parameterType="com.springboot.model.UserInfo" resultType="java.lang.Integer">
    select count(user.id)
    from user user
    inner join user_role ur
    on user.id = ur.userId
    inner join role role
    on ur.roleId = role.id
    where user.id = #{id} and role.id=1
  </select>
  <select id="ifUser" parameterType="com.springboot.model.UserInfo" resultType="java.lang.Integer">
    select count(user.id)
    from user user
    inner join user_role ur
    on user.id = ur.userId
    inner join role role
    on ur.roleId = role.id
    where user.id = #{id} and role.id=2
  </select>
  <select id="SelectPageAddress" parameterType="com.springboot.model.UserInfo" resultType="java.lang.String">
    select  per.address
    from user user
    inner join user_role ur
    on user.id = ur.userId
    inner join role role
    on ur.roleId = role.id
    inner join role_permission rp
    on role.id = rp.roleId
    inner join permission per
    on rp.permissionId = per.id
    where user.id = #{id} and per.name = '虚机查询' or  user.id = #{id} and per.name = '申请虚机'
  </select>
  <select id="selectMenuMessageTop" parameterType="com.springboot.model.UserInfo" resultType="com.springboot.model.Permission">
    select  per.id,per.name,per.address,per.parentId
    from user user
    inner join user_role ur
    on user.id = ur.userId
    inner join role role
    on ur.roleId = role.id
    inner join role_permission rp
    on role.id = rp.roleId
    inner join permission per
    on rp.permissionId = per.id
    where user.id = #{id} and per.parentId = 0
  </select>
  <select id="selectMenuMessageSec" parameterType="com.springboot.model.UserInfo" resultType="com.springboot.model.Permission">
    select  per.id,per.name,per.address,per.parentId
    from user user
    inner join user_role ur
    on user.id = ur.userId
    inner join role role
    on ur.roleId = role.id
    inner join role_permission rp
    on role.id = rp.roleId
    inner join permission per
    on rp.permissionId = per.id
    where user.id = #{id} and per.parentId != 0
  </select>
  <select id="selectIfRepetition" parameterType="com.springboot.model.UserInfo" resultType="java.lang.Integer">
    select count(id)
    from user
    where name = #{name}
  </select>
  <select id="selectByUserName" parameterType="com.springboot.model.UserInfo" resultType="java.lang.Integer">
    select id
    from user
    where name = #{name}
  </select>
  <select id="selectUserMessage" parameterType="com.springboot.model.UserInfo" resultType="java.lang.Integer">
    select count(id)
    from user
    where id = #{id} and name = #{name} and password = #{password}
  </select>
  <select id="selectUserInfo" parameterType="com.springboot.model.UserInfo" resultType="com.springboot.model.UserInfo">
    select
    <include refid="Base_Column_List" />
    from user
    where name = #{name} and password = #{password}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.springboot.model.UserInfo">
    insert into user (name, password
      )
    values (#{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.springboot.model.UserInfo">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="password != null">
        password,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.springboot.model.UserInfo">
    update user
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.springboot.model.UserInfo">
    update user
    set name = #{name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>